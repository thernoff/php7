<?php
/**
 * Параметр функции: ReflectionParameter
 * Объекты данного класса хранят информацию об одном отдельно взятом аргументе функции.
 * Интерфейс класса таков:
 * class ReflectionParameter implements Reflector {
 *  public __construct(string $funcName, string $paramName);
 *  // Метод getName() возвращает имя переменной-аргумента в заголовке функции.
 *  public string getName();
 *  // Функция-член getClass() возвращает тип аргумента, если он был уточнен.
 *  public ReflectionClass getClass();
 *  // Метод allowsNull() возвращает истинное значение, если аргумент может иметь значение NULL при вызове функции или быть опущенным
 *  // (в настоящий момент это применяется только для некоторых встроенных в PHP функций)
 *  public bool allowsNull();
 *  // Метод isPassedByReference() вернет true только в том случае, если параметр передается по ссылке.
 *  public bool isPassedByReference();
 *  public string __toString();
 * }
 *
 * Для создания нового объекта-отражения можно использовать недокументированный конструктор __construct($funcName, $paramName).
 * Он принимает два аргумента: первый - имя функции, в которой определяется аргумент, второй - имя параметра (вместо имени можно
 * также задавать его порядковый номер, начиная с нуля). Для успешного создания объекта функция с именем, заданным в $funcName,
 * должна существовать; кроме того, у нее должен быть аргумент с названием, переданным в $paramName.
 *
 * Обычно отражения для параметров не создают напрямую; вместо этого используют метод ReflectionFunction::getParameters().
 */