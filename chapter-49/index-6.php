<?php
/**
 * Обработчики буферов
 *
 * Рассмотрим интересную методику, позволяющую дополнительно обрабатывать данные из буфера вывода перед отправкой их в браузер.
 * void ob_start([callback $handler] [, int $param])
 * Создает новый буфер перехвата выходного потока скрипта и устанавливает для него так называемый обработчик, задаваемый в аргументе
 * $handler. Эта функция вызывается всякий раз перед запуском ob_end_flush() в программе; ее задача - произвести некоторое дополнительное
 * форматирование текста и вернуть результат.
 * Обработчику всегда передается один обязательный параметр - содержимое буфера перехвата (строковое представление). Кроме того, вторым
 * аргументом дополнительно указывается $param (если он задан).
 * Вместо строкового имени функции в $handler можно передать ссылку на метод класса в таком виде:
 * array(&$obj, "methodName"). Здесь $obj - некоторый объект, а methodName - имя метода этого объекта, который будет вызван для обработки
 * данных.
 */

 function ob_linearize($text)
 {
     // Удалить из текста все переносы строк и повторяющиеся пробелы
     return preg_replace('/[\r\n\s]+/s', ' ', trim($text));
 }

 // Перехватываем выходной поток с установкой обработчика
 ob_start("ob_linearize");
 // Дальше идет обычное выполнение скрипта. Он может выводить все, что угодно - в конце из текста будут удалены все переводы строк.
 echo htmlspecialchars(file_get_contents(__FILE__));