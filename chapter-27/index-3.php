<?php
// Класс Generator

// Пример генератора, рассмотренного ранее.
function simple($from = 0, $to = 100) {
  for ($i = $from; $i < $to; $i++) {
    yield $i;
  }
}

foreach (simple(0, 6) as $val) {
  echo "Значение = $val<br/>";
  echo "Квадрат = " . ($val * $val) . "<br/>";
}

// Любой генератор возвращает объект класса Generator
$objGen = simple(1, 5);
var_dump($objGen); // object(Generator)[3]

// Так же как и в случае класса Directory, объект класса Generator не может быть получен через оператор new (вернее, получить его можно, но воспользоваться им
// не удастся). Поэтому возможность наследовать собственные генераторы также закрыта.
// Однако генератор позволяет использовать методы, определенные в классе Generator. Используя дополнительные методы, можно осуществить обход генератора без применения
// цикла foreach
// Использование генератора без foreach
function simple2($from = 0, $to = 100) {
  for ($i = $from; $i < $to; $i++) {
    yield $i;
  }
}

$obj = simple2(1, 5);
// Выполняем цикл, пока итератор не достигнет конца
while ($obj->valid()) {
  echo ($obj->current() * $obj->current()) . " ";
  // К следующему элементу
  $obj->next();
}

// current() - возвращает текущее значение, если в операторе yield указывается ключ, то для его извлечения используется отдельный мтеод key()
// next() - переход к следующей итерации
// valid() - проверяет, закрыт ли генератор; если генератор используется, метод возвращает true, если итерации закончились и генератор закрыт, метод возвращает false.